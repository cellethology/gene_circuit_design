experiments:
"""
  sei_pca:
    data_path: "/storage2/wangzitongLab/liuxuyin/gene_circuit_design_study/gene_circuit_design/data_new/Feng_2023/ML_predictions/sei/SEI_sequence_embeddings_feng_2023_ML_predictions_PCA.safetensors"  # Update with actual path
    strategies: ["HIGH_EXPRESSION", "RANDOM"]
    seq_mod_methods: ["EMBEDDING"]  # You'll need to implement this in sequence_utils.py
    target_val_key: "expressions"
    regression_models: ["LINEAR", "KNN", "RANDOM_FOREST", "XGBOOST", "MLP"]
    seeds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
    initial_sample_size: 8
    batch_size: 8
    test_size: 30
    max_rounds: 20
    normalize_expression: true
    no_test: true
    normalize_input_output: true
    output_dir: "results/Feng_2023/sei_pca_512"
    """
  evo2_pca:
    data_path: "/storage2/wangzitongLab/liuxuyin/gene_circuit_design_study/gene_circuit_design/data_new/Feng_2023/dSort-Seq/evo2/merged_data_dSort-Seq_rank_0_pca_output.safetensors"
    strategies: ["HIGH_EXPRESSION", "RANDOM", "LOG_LIKELIHOOD"]
    seq_mod_methods: ["EMBEDDING"]
    target_val_key: "expressions"
    regression_models: ["LINEAR", "KNN", "RANDOM_FOREST", "XGBOOST", "MLP"]
    seeds: [1, 2, 3, 4, 5]
    initial_sample_size: 8
    batch_size: 8
    test_size: 30
    max_rounds: 20
    normalize_expression: true
    no_test: true
    normalize_input_output: true
    output_dir: "results/Feng_2023/evo_pca_512_tiny"
  onehot:
    data_path: "/storage2/wangzitongLab/liuxuyin/gene_circuit_design_study/gene_circuit_design/data_new/Feng_2023/ML_predictions/raw/merged_data_ML_predictions_onehot_encode.safetensors"
    strategies: ["HIGH_EXPRESSION", "RANDOM"]
    seq_mod_methods: ["EMBEDDING"]
    target_val_key: "expressions_8 mg/L cerulenin"
    regression_models: ["LINEAR", "KNN", "RANDOM_FOREST", "XGBOOST", "MLP"]
    seeds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
    initial_sample_size: 8
    batch_size: 8
    test_size: 30
    max_rounds: 20
    normalize_expression: true
    no_test: true
    normalize_input_output: true
    output_dir: "results/Feng_2023/onehotRaw"
  onehot_pca:
    data_path: "/storage2/wangzitongLab/liuxuyin/gene_circuit_design_study/gene_circuit_design/data_new/Feng_2023/dSort-Seq/raw/merged_data_dSort-Seq_results_onehot_encode_PCA.safetensors"
    strategies: ["HIGH_EXPRESSION", "RANDOM"]
    seq_mod_methods: ["EMBEDDING"]
    target_val_key: "expressions"
    regression_models: ["LINEAR", "KNN", "RANDOM_FOREST", "XGBOOST", "MLP"]
    seeds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
    initial_sample_size: 8
    batch_size: 8
    test_size: 30
    max_rounds: 20
    normalize_expression: true
    no_test: true
    normalize_input_output: true
    output_dir: "results/Feng_2023/onehotPca_512"
  # sei_raw 
  # evo2_raw
